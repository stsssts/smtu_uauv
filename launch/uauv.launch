<?xml version="1.0"?>
<launch>
  <!-- Launch Gazebo with underwater world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="gui" value="true" />
    <arg name="paused" value="true"/>
    <arg name="world_name" 
      value="$(find freefloating_gazebo)/world/underwater.world"/>
  </include>


  <!-- spawn in Gazebo with GUI -->
  <group ns="uauv">
    <param name="robot_description" 
           command="$(find xacro)/xacro --inorder 
                    $(find smtu_uauv)/urdf/uauv.xacro"/>

    <node name="spawner"
          pkg="gazebo_ros" 
          type="spawn_model" 
          respawn="false"
          output="screen" 
          args="-urdf -model uauv -param robot_description
                -x 0 -y 0 -z 0 -R 0 -P 0 -Y 0"/>

    <rosparam file="$(find smtu_uauv)/config/uauv.yaml"
              command="load"/>

    <!-- Launch low-level PID control for body -->
    <!--node name="pid_control" pkg="freefloating_gazebo"
             type="pid_control" output="screen"/-->

    <!-- Manual thrusetrs control -->
    <group ns="thrusters">
      <param name="robot_description" 
             command="$(find xacro)/xacro --inorder 
                      $(find smtu_uauv)/urdf/uauv_dummy.urdf"/>

      <node name="joint_state_publisher" 
            pkg="joint_state_publisher" 
            type="joint_state_publisher" 
            respawn="true">

        <param name="use_gui" value="True"/>
        <remap from="joint_states" to="/uauv/thruster_command"/>
      </node>
    </group>
  </group>

  <param name="terrain_description" 
         command="$(find xacro)/xacro --inorder 
                  $(find smtu_uauv)/urdf/pool.sdf"/>

  <node name="terrain_spawner" 
        pkg="gazebo_ros" 
        type="spawn_model" 
        respawn="false" 
        output="screen" 
        args="-sdf -model terrain -param terrain_description 
              -x 0 -y 0 -z 0 -R 0 -P 0 -Y 0"/>
</launch>
